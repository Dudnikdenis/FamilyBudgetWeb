
таблица пользователей

create table user_prog( user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name_user VARCHAR(15), password_user  VARCHAR(100));

insert into user_prog(name_user, password_user) values ('Den', 1111);

select * from user_prog where name_user = 'Den';

таблица кридиты

create table credit( credit_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, nameBank VARCHAR(15), datePayment  serial, amount VARCHAR(15), accomplishment boolean DEFAULT false);

insert into credit(nameBank, datePayment, amount) values ('ГазпромБанк', 14, '1000');

UPDATE credit SET accomplishment = true WHERE credit_id = 10;

DELETE FROM credit WHERE credit_id='1';

DELETE FROM credit;

select * from credit;

select FROM credit WHERE credit_id=13;

create table total_amount_of_credits (id int DEFAULT 1, ferstNumberAmount NUMERIC(20,2) DEFAULT 0.00, secondNumberAmount NUMERIC(20,2) DEFAULT 0.00, totalAmount NUMERIC(20,2) DEFAULT 0.00);

insert into total_amount_of_credits (ferstNumberAmount, secondNumberAmount, totalAmount) values (0.00, 0.00, 0.00);

UPDATE total_amount_of_credits SET ferstNumberAmount = 00.00 WHERE id = 1;



select * from total_amount_of_credits;


таблица расходы

create table expenses( expenses_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name_expenses VARCHAR(40), amount VARCHAR(15), accomplishment boolean DEFAULT false);

insert into expenses(name_expenses, amount) values ('Купить машину', '1000');

DELETE FROM expenses WHERE expenses_id='1';

DELETE FROM expenses;

select * from expenses;


таблица покупок

create table shoppingList( shoppingList_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, product_name VARCHAR(15), product_quantity VARCHAR(15), accomplishment boolean DEFAULT false);

insert into shoppingList(product_name, product_quantity) values ('Майонез', '1');

insert into shoppingList(product_name, product_quantity) values ('Марковка', '1000');

UPDATE shoppingList SET accomplishment = true WHERE shoppingList_id = 1;

DELETE FROM shoppingList WHERE shoppingList_id='1';

DELETE FROM shoppingList;

SELECT * FROM shoppingList;


комунальные платежи

create table communal_rate( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, rate integer, communal VARCHAR(15));

insert into communal_rate(rate, communal) values (1, 'electricity');

UPDATE communal_rate set rate = 2.5 where communal = 'electricity';

insert into communal_rate(rate, communal) values (1, 'water');

select* from communal_rate;

select (rate) from communal_rate where id = 1;

create table electricity( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, indications integer, date_indications integer);

-- select count(*) from electricity;

select * from electricity where date_indications = (SELECT MAX(date_indications) FROM electricity);

select * from electricity;

SELECT MAX(date_indications) FROM electricity;

insert into electricity(indications, date_indications) values (1, 10);

create table water( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, indications integer, date_indications integer);

insert into water(indications, date_indications) values (1, 10);



create table category (id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, category VARCHAR(30));

drop table category;

drop table actual_expenses;

create table actual_expenses( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, amount integer DEFAULT 0, month integer, category_id  INTEGER, FOREIGN KEY (category_id) REFERENCES  category (Id));

insert into category(category) values ('Кредиты');

insert into category(category) values ('Газ/бензин машина');

select * from category;

insert into actual_expenses(amount, month, category_id) values (59000, 11, 1);

insert into actual_expenses(amount, category_id) values (500, 11, 2);

select * from actual_expenses;

select (actual_expenses.amount, category.category) from actual_expenses, category where actual_expenses.category_id = category.id;

select (amount) from actual_expenses where category_id = 1;

UPDATE actual_expenses SET amount = 2000 WHERE category_id = 2;




создание таблиц:


create table user_prog( user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name_user VARCHAR(15), password_user  VARCHAR(100));

create table credit( credit_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, nameBank VARCHAR(15), datePayment  serial, amount VARCHAR(15), accomplishment boolean DEFAULT false);

create table total_amount_of_credits (id int DEFAULT 1, ferstNumberAmount NUMERIC(20,2) DEFAULT 0.00, secondNumberAmount NUMERIC(20,2) DEFAULT 0.00, totalAmount NUMERIC(20,2) DEFAULT 0.00);

create table expenses( expenses_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name_expenses VARCHAR(40), amount VARCHAR(15), accomplishment boolean DEFAULT false);

create table shoppingList( shoppingList_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, product_name VARCHAR(15), product_quantity VARCHAR(15), accomplishment boolean DEFAULT false);

create table communal_rate( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, rate integer, communal VARCHAR(15));

create table electricity( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, indications integer, date_indications integer);

create table water( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, indications integer, date_indications integer);

create table category (id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, category VARCHAR(30));

create table actual_expenses( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, amount integer DEFAULT 0, month integer, category_id  INTEGER, FOREIGN KEY (category_id) REFERENCES  category (Id));